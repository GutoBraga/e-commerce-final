/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { AbstractModelSettings } from "./abstract-model-settings";
/**
 * Class for creating adhoc (non-registered) model settings
 * @template T
 */
export class AdhocModelSettings extends AbstractModelSettings {
    constructor() {
        // since these settings are not registered, just use a static name
        super('adhoc');
    }
    /**
     * Creates model settings
     * @template T
     * @param {?} propertyBuilderFunc Function that takes a ModelSettingsBuilder and uses it to return an array of properties
     * @return {?} Model settings configured with properties returned from the 'propertyBuilderFunc' function parameter
     */
    static create(propertyBuilderFunc) {
        const /** @type {?} */ instance = new AdhocModelSettings();
        instance.properties = !!propertyBuilderFunc ? propertyBuilderFunc(instance.builder) || [] : [];
        return instance;
    }
    /**
     * @return {?}
     */
    buildProperties() {
        // this is just needed to satisfy the AbstractModelSettings<T> contract
        return [];
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRob2MtbW9kZWwtc2V0dGluZ3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1mb3JtLXJ1bGVzLyIsInNvdXJjZXMiOlsibGliL2Zvcm0tcnVsZXMvbW9kZWxzL2FkaG9jLW1vZGVsLXNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7QUFPbEUsTUFBTSx5QkFBNkIsU0FBUSxxQkFBd0I7OztRQWUzRCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7Ozs7Ozs7O0lBVG5CLE1BQU0sQ0FBQyxNQUFNLENBQUksbUJBQXFFO1FBQ2xGLHVCQUFNLFFBQVEsR0FBRyxJQUFJLGtCQUFrQixFQUFFLENBQUM7UUFDMUMsUUFBUSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUUvRixNQUFNLENBQUMsUUFBUSxDQUFDO0tBQ25COzs7O0lBT1MsZUFBZTs7UUFFckIsTUFBTSxDQUFDLEVBQUUsQ0FBQztLQUNiO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdE1vZGVsU2V0dGluZ3MgfSBmcm9tIFwiLi9hYnN0cmFjdC1tb2RlbC1zZXR0aW5nc1wiO1xyXG5pbXBvcnQgeyBNb2RlbFNldHRpbmdzQnVpbGRlciB9IGZyb20gXCIuLi9oZWxwZXIvbW9kZWwtc2V0dGluZ3MtYnVpbGRlclwiO1xyXG5pbXBvcnQgeyBQcm9wZXJ0eSB9IGZyb20gXCIuL3Byb3BlcnR5XCI7XHJcblxyXG4vKipcclxuICogQ2xhc3MgZm9yIGNyZWF0aW5nIGFkaG9jIChub24tcmVnaXN0ZXJlZCkgbW9kZWwgc2V0dGluZ3NcclxuICovXHJcbmV4cG9ydCBjbGFzcyBBZGhvY01vZGVsU2V0dGluZ3M8VD4gZXh0ZW5kcyBBYnN0cmFjdE1vZGVsU2V0dGluZ3M8VD4ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIG1vZGVsIHNldHRpbmdzXHJcbiAgICAgKiBAcGFyYW0gcHJvcGVydHlCdWlsZGVyRnVuYyBGdW5jdGlvbiB0aGF0IHRha2VzIGEgTW9kZWxTZXR0aW5nc0J1aWxkZXIgYW5kIHVzZXMgaXQgdG8gcmV0dXJuIGFuIGFycmF5IG9mIHByb3BlcnRpZXNcclxuICAgICAqIEByZXR1cm5zIE1vZGVsIHNldHRpbmdzIGNvbmZpZ3VyZWQgd2l0aCBwcm9wZXJ0aWVzIHJldHVybmVkIGZyb20gdGhlICdwcm9wZXJ0eUJ1aWxkZXJGdW5jJyBmdW5jdGlvbiBwYXJhbWV0ZXJcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNyZWF0ZTxUPihwcm9wZXJ0eUJ1aWxkZXJGdW5jOiAoYnVpbGRlcjogTW9kZWxTZXR0aW5nc0J1aWxkZXIpID0+IFByb3BlcnR5PFQ+W10pOiBBYnN0cmFjdE1vZGVsU2V0dGluZ3M8VD4ge1xyXG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gbmV3IEFkaG9jTW9kZWxTZXR0aW5ncygpO1xyXG4gICAgICAgIGluc3RhbmNlLnByb3BlcnRpZXMgPSAhIXByb3BlcnR5QnVpbGRlckZ1bmMgPyBwcm9wZXJ0eUJ1aWxkZXJGdW5jKGluc3RhbmNlLmJ1aWxkZXIpIHx8IFtdIDogW107XHJcblxyXG4gICAgICAgIHJldHVybiBpbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIC8vIHNpbmNlIHRoZXNlIHNldHRpbmdzIGFyZSBub3QgcmVnaXN0ZXJlZCwganVzdCB1c2UgYSBzdGF0aWMgbmFtZVxyXG4gICAgICAgIHN1cGVyKCdhZGhvYycpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBidWlsZFByb3BlcnRpZXMoKTogUHJvcGVydHk8VD5bXSB7XHJcbiAgICAgICAgLy8gdGhpcyBpcyBqdXN0IG5lZWRlZCB0byBzYXRpc2Z5IHRoZSBBYnN0cmFjdE1vZGVsU2V0dGluZ3M8VD4gY29udHJhY3RcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbn0iXX0=