/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ModelSettingsBuilder } from "../helper/model-settings-builder";
/**
 * Base class for model settings
 * @abstract
 * @template T
 */
export class AbstractModelSettings {
    /**
     * Creates model settings
     * @param {?} name Name of the model settings
     */
    constructor(name) {
        this.builder = new ModelSettingsBuilder();
        this._name = name;
        this.properties = this.buildProperties() || [];
    }
    /**
     * Name of the model setting
     * @return {?}
     */
    get name() {
        return this._name;
    }
}
function AbstractModelSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    AbstractModelSettings.prototype._name;
    /**
     * Helper for building properties, tests, and rules
     * @type {?}
     */
    AbstractModelSettings.prototype.builder;
    /**
     * Properties configured for the model settings
     * @type {?}
     */
    AbstractModelSettings.prototype.properties;
    /**
     * Abstract function for building the properties
     * @abstract
     * @return {?}
     */
    AbstractModelSettings.prototype.buildProperties = function () { };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtbW9kZWwtc2V0dGluZ3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1mb3JtLXJ1bGVzLyIsInNvdXJjZXMiOlsibGliL2Zvcm0tcnVsZXMvbW9kZWxzL2Fic3RyYWN0LW1vZGVsLXNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7Ozs7O0FBTXhFLE1BQU07Ozs7O0lBd0JGLFlBQVksSUFBWTtRQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksb0JBQW9CLEVBQUUsQ0FBQztRQUMxQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUM7S0FDbEQ7Ozs7O0lBdEJELElBQUksSUFBSTtRQUNKLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0tBQ3JCO0NBMEJKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kZWxTZXR0aW5nc0J1aWxkZXIgfSBmcm9tIFwiLi4vaGVscGVyL21vZGVsLXNldHRpbmdzLWJ1aWxkZXJcIjtcclxuaW1wb3J0IHsgUHJvcGVydHkgfSBmcm9tIFwiLi9wcm9wZXJ0eVwiO1xyXG5cclxuLyoqXHJcbiAqIEJhc2UgY2xhc3MgZm9yIG1vZGVsIHNldHRpbmdzXHJcbiAqL1xyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RNb2RlbFNldHRpbmdzPFQ+IHtcclxuICAgIHByaXZhdGUgX25hbWU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIE5hbWUgb2YgdGhlIG1vZGVsIHNldHRpbmdcclxuICAgICAqL1xyXG4gICAgZ2V0IG5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBmb3IgYnVpbGRpbmcgcHJvcGVydGllcywgdGVzdHMsIGFuZCBydWxlc1xyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYnVpbGRlcjogTW9kZWxTZXR0aW5nc0J1aWxkZXI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQcm9wZXJ0aWVzIGNvbmZpZ3VyZWQgZm9yIHRoZSBtb2RlbCBzZXR0aW5nc1xyXG4gICAgICovXHJcbiAgICBwcm9wZXJ0aWVzOiBQcm9wZXJ0eTxUPltdO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBtb2RlbCBzZXR0aW5nc1xyXG4gICAgICogQHBhcmFtIG5hbWUgTmFtZSBvZiB0aGUgbW9kZWwgc2V0dGluZ3NcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5idWlsZGVyID0gbmV3IE1vZGVsU2V0dGluZ3NCdWlsZGVyKCk7XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5wcm9wZXJ0aWVzID0gdGhpcy5idWlsZFByb3BlcnRpZXMoKSB8fCBbXTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFic3RyYWN0IGZ1bmN0aW9uIGZvciBidWlsZGluZyB0aGUgcHJvcGVydGllc1xyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgYnVpbGRQcm9wZXJ0aWVzKCk6IFByb3BlcnR5PFQ+W107XHJcbn0iXX0=